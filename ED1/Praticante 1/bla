#include <stdio.h>
#include <stdlib.h>
#include "Lista.h"
#define max 20

struct list {
    int qty;
    int data[max];
};

bool listVAZIA(LISTA *list){ return list->qty == 0; }
bool listCHEIA(LISTA *list){ return list->qty == max; }

LISTA* criarLISTA(){
    LISTA *nova = malloc(sizeof *nova);
    if(nova) nova->qty = 0;
    return nova;
}

void lerLISTA(LISTA *list){
    if(list && !listVAZIA(list)){
        for(int i=0;i<list->qty;i++){
            printf("%d ", list->data[i]);
        }
        putchar('\n');
    } else {
        puts("Lista vazia ou inexistente");
    }
}

LISTA* concLISTA(LISTA *listx, LISTA *listy){
    if(!listx || !listy) return NULL;
    if(listx->qty + listy->qty > max) return NULL;

    LISTA *z = criarLISTA();
    if(!z) return NULL;

    for(int i=0;i<listx->qty;i++) z->data[z->qty++] = listx->data[i];
    for(int i=0;i<listy->qty;i++) z->data[z->qty++] = listy->data[i];
    return z;  // every path returns
}

void preencherLISTA_inicio(LISTA *list, int x){
    if(list && !listCHEIA(list)){
        list->data[list->qty++] = x;
    }
}


/////

#include <stdio.h>
#include <stdlib.h>
#include "Lista.h"
#define max 20
struct list{
    int qty;
    int data[max];
};

bool listVAZIA(LISTA* list){
    return list->qty == 0;
}

bool listCHEIA(LISTA* list){
    return list->qty == max;
}

LISTA* criarLISTA(){
    LISTA* nova = malloc(sizeof(LISTA));
    if(nova != NULL){
        nova->qty = 0;
    }
    return nova;
}

void lerLISTA(LISTA* list){
    if (list != NULL && !listVAZIA(list)){
        for(int i = 0; i < list->qty; i++){
            printf("%i", list->data[i]);
        }
    }   else{
        puts("Lista esta vazia/não existe");
    }
}

LISTA* concLISTA(LISTA* listx, LISTA* listy){
    if ((listx != NULL && !listVAZIA(listx)) && (listy != NULL && !listVAZIA(listy))){
        if(listx->qty + listy->qty > max){
            puts("Lista mto grande bbzão");
            return 0;
        } else{
        LISTA* listz = criarLISTA();
            for(int i = 0; i < listx->qty; i++){
                listz->data[i] = listx->data[i];
                listz->qty++;
            }
            for(int i = 0; i < listy->qty; i++){
                listz->data[i+listx->qty] = listy->data[i];
                listz->qty++;
            }
            return listz;
        }
    } 
    return 0;
}   

void preencherLISTA_inicio(LISTA* list, int x){
    if(list != NULL && !listCHEIA(list)){
        list->data[list->qty] = x;
        list->qty++;
    }
}
